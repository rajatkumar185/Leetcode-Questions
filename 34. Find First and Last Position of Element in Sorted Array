class Solution {
    public int searchRange2(int[] nums, int target) {
    int start=0;
        int end=nums.length-1;
        int ans=-1;
        while(start<=end){
            int mid=start + ((end - start) / 2);
            if(nums[mid]==target){
                start=mid+1;
                ans=mid;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
}
    public int searchRange1(int[] nums, int target) {
    int start=0;
        int end=nums.length-1;
        int ans=-1;
        while(start<=end){
            int mid=start + ((end - start) / 2);
            if(nums[mid]==target){
                end=mid-1;
                ans=mid;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
}
    public int[] searchRange(int[] nums, int target) {
        int [] answer=new int[2];
        answer[0]=searchRange1(nums,target);
        answer[1]=searchRange2(nums,target);
        return answer;
        
    }
}
