class Solution {
public:
   const int MOD = 1e9 + 7;
    int f(int index, int currMax, int currCost, int n, int m, int k, vector<vector<vector<int>>> &dp) {
       
        if(currCost > k)    return 0;
        if(index == n) {
            if(currCost == k) return 1;
            else return 0;
        }
        
        if(dp[index][currMax][currCost] != -1)
            return dp[index][currMax][currCost];
     
        int ans = 0;
        for(int num=1; num<=m; num++) {
            if(num > currMax)
                ans += f(index + 1, num, currCost + 1, n, m, k, dp);
            else
                ans += f(index + 1, currMax, currCost, n, m, k, dp);
            ans %= MOD;;
        }
        return dp[index][currMax][currCost] = ans;

    }
    int numOfArrays(int n, int m, int k) {
        vector<vector<vector<int>>> dp(n+1, vector<vector<int>> (m+1, vector<int>(k+1,-1)));
        
        return f(0, 0, 0, n, m , k, dp);
    }
};
